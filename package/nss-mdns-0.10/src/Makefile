# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id: Makefile.am 114 2007-02-08 16:42:22Z lennart $
#
# This file is part of nss-mdns.
#
# nss-mdns is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# nss-mdns is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with nss-mdns; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA.


srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/nss-mdns
pkglibdir = $(libdir)/nss-mdns
pkgincludedir = $(includedir)/nss-mdns
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = aarch64-unknown-linux-gnu
#am__append_1 = \
#	nss_mdns.la \
#	nss_mdns4.la \
#	nss_mdns6.la \
#	nss_mdns_minimal.la \
#	nss_mdns4_minimal.la \
#	nss_mdns6_minimal.la

am__append_2 = \
	libnss_mdns.la \
	libnss_mdns4.la \
	libnss_mdns6.la \
	libnss_mdns_minimal.la \
	libnss_mdns4_minimal.la \
	libnss_mdns6_minimal.la

noinst_PROGRAMS = nss-test$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2)
am__append_3 = avahi.c avahi.h
am__append_4 = avahi-test
am__append_5 = query.c query.h dns.c dns.h
am__append_6 = mdns-test
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libnss_mdns_la_LIBADD =
am__libnss_mdns_la_SOURCES_DIST = util.c util.h avahi.c avahi.h \
	query.c query.h dns.c dns.h nss.c
am__objects_1 = libnss_mdns_la-avahi.lo
am__objects_2 = libnss_mdns_la-query.lo \
	libnss_mdns_la-dns.lo
am__objects_3 = libnss_mdns_la-util.lo $(am__objects_1) \
	$(am__objects_2)
am_libnss_mdns_la_OBJECTS = $(am__objects_3) libnss_mdns_la-nss.lo
libnss_mdns_la_OBJECTS = $(am_libnss_mdns_la_OBJECTS)
am_libnss_mdns_la_rpath = -rpath $(libdir)
libnss_mdns4_la_LIBADD =
am__libnss_mdns4_la_SOURCES_DIST = util.c util.h avahi.c avahi.h \
	query.c query.h dns.c dns.h nss.c
am__objects_4 = libnss_mdns4_la-avahi.lo
am__objects_5 = libnss_mdns4_la-query.lo \
	libnss_mdns4_la-dns.lo
am__objects_6 = libnss_mdns4_la-util.lo $(am__objects_4) \
	$(am__objects_5)
am__objects_7 = $(am__objects_6) libnss_mdns4_la-nss.lo
am_libnss_mdns4_la_OBJECTS = $(am__objects_7)
libnss_mdns4_la_OBJECTS = $(am_libnss_mdns4_la_OBJECTS)
am_libnss_mdns4_la_rpath = -rpath $(libdir)
libnss_mdns4_minimal_la_LIBADD =
am__libnss_mdns4_minimal_la_SOURCES_DIST = util.c util.h avahi.c \
	avahi.h query.c query.h dns.c dns.h nss.c
am__objects_8 = libnss_mdns4_minimal_la-avahi.lo
am__objects_9 = libnss_mdns4_minimal_la-query.lo \
	libnss_mdns4_minimal_la-dns.lo
am__objects_10 = libnss_mdns4_minimal_la-util.lo $(am__objects_8) \
	$(am__objects_9)
am__objects_11 = $(am__objects_10) libnss_mdns4_minimal_la-nss.lo
am_libnss_mdns4_minimal_la_OBJECTS = $(am__objects_11)
libnss_mdns4_minimal_la_OBJECTS =  \
	$(am_libnss_mdns4_minimal_la_OBJECTS)
am_libnss_mdns4_minimal_la_rpath = -rpath $(libdir)
libnss_mdns6_la_LIBADD =
am__libnss_mdns6_la_SOURCES_DIST = util.c util.h avahi.c avahi.h \
	query.c query.h dns.c dns.h nss.c
am__objects_12 = libnss_mdns6_la-avahi.lo
am__objects_13 = libnss_mdns6_la-query.lo \
	libnss_mdns6_la-dns.lo
am__objects_14 = libnss_mdns6_la-util.lo $(am__objects_12) \
	$(am__objects_13)
am__objects_15 = $(am__objects_14) libnss_mdns6_la-nss.lo
am_libnss_mdns6_la_OBJECTS = $(am__objects_15)
libnss_mdns6_la_OBJECTS = $(am_libnss_mdns6_la_OBJECTS)
am_libnss_mdns6_la_rpath = -rpath $(libdir)
libnss_mdns6_minimal_la_LIBADD =
am__libnss_mdns6_minimal_la_SOURCES_DIST = util.c util.h avahi.c \
	avahi.h query.c query.h dns.c dns.h nss.c
am__objects_16 = libnss_mdns6_minimal_la-avahi.lo
am__objects_17 = libnss_mdns6_minimal_la-query.lo \
	libnss_mdns6_minimal_la-dns.lo
am__objects_18 = libnss_mdns6_minimal_la-util.lo $(am__objects_16) \
	$(am__objects_17)
am__objects_19 = $(am__objects_18) libnss_mdns6_minimal_la-nss.lo
am_libnss_mdns6_minimal_la_OBJECTS = $(am__objects_19)
libnss_mdns6_minimal_la_OBJECTS =  \
	$(am_libnss_mdns6_minimal_la_OBJECTS)
am_libnss_mdns6_minimal_la_rpath = -rpath $(libdir)
libnss_mdns_minimal_la_LIBADD =
am__libnss_mdns_minimal_la_SOURCES_DIST = util.c util.h avahi.c \
	avahi.h query.c query.h dns.c dns.h nss.c
am__objects_20 = libnss_mdns_minimal_la-avahi.lo
am__objects_21 = libnss_mdns_minimal_la-query.lo \
	libnss_mdns_minimal_la-dns.lo
am__objects_22 = libnss_mdns_minimal_la-util.lo $(am__objects_20) \
	$(am__objects_21)
am__objects_23 = $(am__objects_22) libnss_mdns_minimal_la-nss.lo
am_libnss_mdns_minimal_la_OBJECTS = $(am__objects_23)
libnss_mdns_minimal_la_OBJECTS = $(am_libnss_mdns_minimal_la_OBJECTS)
am_libnss_mdns_minimal_la_rpath = -rpath $(libdir)
nss_mdns_la_LIBADD =
am__nss_mdns_la_SOURCES_DIST = util.c util.h avahi.c avahi.h query.c \
	query.h dns.c dns.h bsdnss.c
am__objects_24 = nss_mdns_la-avahi.lo
am__objects_25 = nss_mdns_la-query.lo \
	nss_mdns_la-dns.lo
am__objects_26 = nss_mdns_la-util.lo $(am__objects_24) \
	$(am__objects_25)
am_nss_mdns_la_OBJECTS = $(am__objects_26) nss_mdns_la-bsdnss.lo
nss_mdns_la_OBJECTS = $(am_nss_mdns_la_OBJECTS)
#am_nss_mdns_la_rpath = -rpath $(libdir)
nss_mdns4_la_LIBADD =
am__nss_mdns4_la_SOURCES_DIST = util.c util.h avahi.c avahi.h query.c \
	query.h dns.c dns.h bsdnss.c
am__objects_27 = nss_mdns4_la-avahi.lo
am__objects_28 = nss_mdns4_la-query.lo \
	nss_mdns4_la-dns.lo
am__objects_29 = nss_mdns4_la-util.lo $(am__objects_27) \
	$(am__objects_28)
am__objects_30 = $(am__objects_29) nss_mdns4_la-bsdnss.lo
am_nss_mdns4_la_OBJECTS = $(am__objects_30)
nss_mdns4_la_OBJECTS = $(am_nss_mdns4_la_OBJECTS)
#am_nss_mdns4_la_rpath = -rpath $(libdir)
nss_mdns4_minimal_la_LIBADD =
am__nss_mdns4_minimal_la_SOURCES_DIST = util.c util.h avahi.c avahi.h \
	query.c query.h dns.c dns.h bsdnss.c
am__objects_31 = nss_mdns4_minimal_la-avahi.lo
am__objects_32 = nss_mdns4_minimal_la-query.lo \
	nss_mdns4_minimal_la-dns.lo
am__objects_33 = nss_mdns4_minimal_la-util.lo $(am__objects_31) \
	$(am__objects_32)
am__objects_34 = $(am__objects_33) nss_mdns4_minimal_la-bsdnss.lo
am_nss_mdns4_minimal_la_OBJECTS = $(am__objects_34)
nss_mdns4_minimal_la_OBJECTS = $(am_nss_mdns4_minimal_la_OBJECTS)
#am_nss_mdns4_minimal_la_rpath = -rpath $(libdir)
nss_mdns6_la_LIBADD =
am__nss_mdns6_la_SOURCES_DIST = util.c util.h avahi.c avahi.h query.c \
	query.h dns.c dns.h bsdnss.c
am__objects_35 = nss_mdns6_la-avahi.lo
am__objects_36 = nss_mdns6_la-query.lo \
	nss_mdns6_la-dns.lo
am__objects_37 = nss_mdns6_la-util.lo $(am__objects_35) \
	$(am__objects_36)
am__objects_38 = $(am__objects_37) nss_mdns6_la-bsdnss.lo
am_nss_mdns6_la_OBJECTS = $(am__objects_38)
nss_mdns6_la_OBJECTS = $(am_nss_mdns6_la_OBJECTS)
#am_nss_mdns6_la_rpath = -rpath $(libdir)
nss_mdns6_minimal_la_LIBADD =
am__nss_mdns6_minimal_la_SOURCES_DIST = util.c util.h avahi.c avahi.h \
	query.c query.h dns.c dns.h bsdnss.c
am__objects_39 = nss_mdns6_minimal_la-avahi.lo
am__objects_40 = nss_mdns6_minimal_la-query.lo \
	nss_mdns6_minimal_la-dns.lo
am__objects_41 = nss_mdns6_minimal_la-util.lo $(am__objects_39) \
	$(am__objects_40)
am__objects_42 = $(am__objects_41) nss_mdns6_minimal_la-bsdnss.lo
am_nss_mdns6_minimal_la_OBJECTS = $(am__objects_42)
nss_mdns6_minimal_la_OBJECTS = $(am_nss_mdns6_minimal_la_OBJECTS)
#am_nss_mdns6_minimal_la_rpath = -rpath $(libdir)
nss_mdns_minimal_la_LIBADD =
am__nss_mdns_minimal_la_SOURCES_DIST = util.c util.h avahi.c avahi.h \
	query.c query.h dns.c dns.h bsdnss.c
am__objects_43 = nss_mdns_minimal_la-avahi.lo
am__objects_44 = nss_mdns_minimal_la-query.lo \
	nss_mdns_minimal_la-dns.lo
am__objects_45 = nss_mdns_minimal_la-util.lo $(am__objects_43) \
	$(am__objects_44)
am__objects_46 = $(am__objects_45) nss_mdns_minimal_la-bsdnss.lo
am_nss_mdns_minimal_la_OBJECTS = $(am__objects_46)
nss_mdns_minimal_la_OBJECTS = $(am_nss_mdns_minimal_la_OBJECTS)
#am_nss_mdns_minimal_la_rpath = -rpath $(libdir)
am__EXEEXT_1 = avahi-test$(EXEEXT)
am__EXEEXT_2 = mdns-test$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_avahi_test_OBJECTS = avahi.$(OBJEXT) util.$(OBJEXT) \
	avahi-test.$(OBJEXT)
avahi_test_OBJECTS = $(am_avahi_test_OBJECTS)
avahi_test_LDADD = $(LDADD)
am_mdns_test_OBJECTS = query.$(OBJEXT) dns.$(OBJEXT) util.$(OBJEXT) \
	mdns-test.$(OBJEXT)
mdns_test_OBJECTS = $(am_mdns_test_OBJECTS)
mdns_test_LDADD = $(LDADD)
am_nss_test_OBJECTS = nss-test.$(OBJEXT)
nss_test_OBJECTS = $(am_nss_test_OBJECTS)
nss_test_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libnss_mdns_la_SOURCES) $(libnss_mdns4_la_SOURCES) \
	$(libnss_mdns4_minimal_la_SOURCES) $(libnss_mdns6_la_SOURCES) \
	$(libnss_mdns6_minimal_la_SOURCES) \
	$(libnss_mdns_minimal_la_SOURCES) $(nss_mdns_la_SOURCES) \
	$(nss_mdns4_la_SOURCES) $(nss_mdns4_minimal_la_SOURCES) \
	$(nss_mdns6_la_SOURCES) $(nss_mdns6_minimal_la_SOURCES) \
	$(nss_mdns_minimal_la_SOURCES) $(avahi_test_SOURCES) \
	$(mdns_test_SOURCES) $(nss_test_SOURCES)
DIST_SOURCES = $(am__libnss_mdns_la_SOURCES_DIST) \
	$(am__libnss_mdns4_la_SOURCES_DIST) \
	$(am__libnss_mdns4_minimal_la_SOURCES_DIST) \
	$(am__libnss_mdns6_la_SOURCES_DIST) \
	$(am__libnss_mdns6_minimal_la_SOURCES_DIST) \
	$(am__libnss_mdns_minimal_la_SOURCES_DIST) \
	$(am__nss_mdns_la_SOURCES_DIST) \
	$(am__nss_mdns4_la_SOURCES_DIST) \
	$(am__nss_mdns4_minimal_la_SOURCES_DIST) \
	$(am__nss_mdns6_la_SOURCES_DIST) \
	$(am__nss_mdns6_minimal_la_SOURCES_DIST) \
	$(am__nss_mdns_minimal_la_SOURCES_DIST) $(avahi_test_SOURCES) \
	$(mdns_test_SOURCES) $(nss_test_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/nss-mdns-0.10/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/nss-mdns-0.10/missing --run tar
AR = /home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//bin/aarch64-linux-ar
AUTOCONF = ${SHELL} /home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/nss-mdns-0.10/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/nss-mdns-0.10/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/nss-mdns-0.10/missing --run automake-1.9
AWK = gawk
CC = /home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//bin/aarch64-linux-gcc -Os  -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/include -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/usr/include -I/home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//aarch64-linux/include
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -std=gnu99 -Wall -W -Wextra -pedantic -pipe -Wformat -Wold-style-definition -Wdeclaration-after-statement -Wfloat-equal -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wredundant-decls -Wmissing-noreturn -Wshadow -Wendif-labels -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Winline -Wno-unused-parameter -pipe -W -Wall -pedantic -std=c99 -Wno-unused-parameter
CPP = /home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//bin/aarch64-linux-cpp -Os  -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/include -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/usr/include -I/home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//aarch64-linux/include
CPPFLAGS = 
CXX = /home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//bin/aarch64-linux-g++ -Os  -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/include -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/usr/include -I/home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//aarch64-linux/include
CXXCPP = /home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//bin/aarch64-linux-g++ -Os  -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/include -I/home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/staging_dir/usr/include -I/home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//aarch64-linux/include -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_AVAHI_FALSE = #
ENABLE_AVAHI_TRUE = 
ENABLE_LEGACY_FALSE = #
ENABLE_LEGACY_TRUE = 
EXEEXT = 
F77 = 
FFLAGS = 
FREEBSD_NSS_FALSE = 
FREEBSD_NSS_TRUE = #
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/nss-mdns-0.10/missing --run makeinfo
OBJEXT = o
PACKAGE = nss-mdns
PACKAGE_BUGREPORT = mzaffzqaf (at) 0pointer (dot) de
PACKAGE_NAME = nss-mdns
PACKAGE_STRING = nss-mdns 0.10
PACKAGE_TARNAME = nss-mdns
PACKAGE_URL = http://0pointer.de/lennart/projects/nss-mdns/
PACKAGE_VERSION = 0.10
PATH_SEPARATOR = :
RANLIB = /home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//bin/aarch64-linux-ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = /home/hperev/Documents/CDI/1-From-NAS/eric-same-dir/97271IP-Toolchain/stbgcc-4.8-1.5//bin/aarch64-linux-strip
USE_LINKS_FALSE = 
USE_LINKS_TRUE = #
USE_LYNX_FALSE = 
USE_LYNX_TRUE = #
VERSION = 0.10
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-pc-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_links = no
have_lynx = no
host = aarch64-unknown-linux-gnu
host_alias = aarch64-linux
host_cpu = aarch64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/jqiao/spk_64bit/spk/objOutput/bskyb-brcm64bit/build_aarch64/nss-mdns-0.10/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = aarch64-linux
EXTRA_DIST = map-file

#AM_CFLAGS += -DNDEBUG=1 -Os

# This cool debug trap works on i386/gcc only
AM_CFLAGS = -DMDNS_ALLOW_FILE=\"$(sysconfdir)/mdns.allow\" \
	-DRESOLV_CONF_FILE=\"$(sysconfdir)/resolv.conf\" \
	-DAVAHI_SOCKET=\"$(localstatedir)/run/avahi-daemon/socket\" \
	'-DDEBUG_TRAP=__asm__("int $$3")'
AM_LDFLAGS = -avoid-version -module -export-dynamic
lib_LTLIBRARIES = $(am__append_1) $(am__append_2)
sources = util.c util.h $(am__append_3) $(am__append_5)

# GNU Libc
libnss_mdns_la_SOURCES = $(sources) nss.c
libnss_mdns_la_CFLAGS = $(AM_CFLAGS) 
libnss_mdns_la_LDFLAGS = $(AM_LDFLAGS) -shrext .so.2 -Wl,-version-script=$(srcdir)/map-file
libnss_mdns_minimal_la_SOURCES = $(libnss_mdns_la_SOURCES)
libnss_mdns_minimal_la_CFLAGS = $(libnss_mdns_la_CFLAGS) -DMDNS_MINIMAL
libnss_mdns_minimal_la_LDFLAGS = $(libnss_mdns_la_LDFLAGS)
libnss_mdns4_la_SOURCES = $(libnss_mdns_la_SOURCES)
libnss_mdns4_la_CFLAGS = $(libnss_mdns_la_CFLAGS) -DNSS_IPV4_ONLY=1
libnss_mdns4_la_LDFLAGS = $(libnss_mdns_la_LDFLAGS)
libnss_mdns4_minimal_la_SOURCES = $(libnss_mdns_la_SOURCES)
libnss_mdns4_minimal_la_CFLAGS = $(libnss_mdns_la_CFLAGS) -DNSS_IPV4_ONLY=1 -DMDNS_MINIMAL
libnss_mdns4_minimal_la_LDFLAGS = $(libnss_mdns_la_LDFLAGS)
libnss_mdns6_la_SOURCES = $(libnss_mdns_la_SOURCES)
libnss_mdns6_la_CFLAGS = $(libnss_mdns_la_CFLAGS) -DNSS_IPV6_ONLY=1
libnss_mdns6_la_LDFLAGS = $(libnss_mdns_la_LDFLAGS)
libnss_mdns6_minimal_la_SOURCES = $(libnss_mdns_la_SOURCES)
libnss_mdns6_minimal_la_CFLAGS = $(libnss_mdns_la_CFLAGS) -DNSS_IPV6_ONLY=1 -DMDNS_MINIMAL
libnss_mdns6_minimal_la_LDFLAGS = $(libnss_mdns_la_LDFLAGS)

# FreeBSD
nss_mdns_la_SOURCES = $(sources) bsdnss.c
nss_mdns_la_CFLAGS = $(AM_CFLAGS)
nss_mdns_la_LDFLAGS = $(AM_LDFLAGS) -shrext .so.1
nss_mdns_minimal_la_SOURCES = $(nss_mdns_la_SOURCES)
nss_mdns_minimal_la_CFLAGS = $(nss_mdns_la_CFLAGS) -DMDNS_MINIMAL
nss_mdns_minimal_la_LDFLAGS = $(nss_mdns_la_LDFLAGS)
nss_mdns4_la_SOURCES = $(nss_mdns_la_SOURCES)
nss_mdns4_la_CFLAGS = $(nss_mdns_la_CFLAGS) -DNSS_IPV4_ONLY=1
nss_mdns4_la_LDFLAGS = $(nss_mdns_la_LDFLAGS)
nss_mdns4_minimal_la_SOURCES = $(nss_mdns_la_SOURCES)
nss_mdns4_minimal_la_CFLAGS = $(nss_mdns_la_CFLAGS) -DNSS_IPV4_ONLY=1 -DMDNS_MINIMAL
nss_mdns4_minimal_la_LDFLAGS = $(nss_mdns_la_LDFLAGS)
nss_mdns6_la_SOURCES = $(nss_mdns_la_SOURCES)
nss_mdns6_la_CFLAGS = $(nss_mdns_la_CFLAGS) -DNSS_IPV6_ONLY=1
nss_mdns6_la_LDFLAGS = $(nss_mdns_la_LDFLAGS)
nss_mdns6_minimal_la_SOURCES = $(nss_mdns_la_SOURCES)
nss_mdns6_minimal_la_CFLAGS = $(nss_mdns_la_CFLAGS) -DNSS_IPV6_ONLY=1 -DMDNS_MINIMAL
nss_mdns6_minimal_la_LDFLAGS = $(nss_mdns_la_LDFLAGS)
avahi_test_SOURCES = \
	avahi.c avahi.h \
	util.c util.h \
	avahi-test.c

mdns_test_SOURCES = \
	query.c query.h \
	dns.c dns.h \
	util.c util.h \
	mdns-test.c

nss_test_SOURCES = \
	nss-test.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libnss_mdns.la: $(libnss_mdns_la_OBJECTS) $(libnss_mdns_la_DEPENDENCIES) 
	$(LINK) $(am_libnss_mdns_la_rpath) $(libnss_mdns_la_LDFLAGS) $(libnss_mdns_la_OBJECTS) $(libnss_mdns_la_LIBADD) $(LIBS)
libnss_mdns4.la: $(libnss_mdns4_la_OBJECTS) $(libnss_mdns4_la_DEPENDENCIES) 
	$(LINK) $(am_libnss_mdns4_la_rpath) $(libnss_mdns4_la_LDFLAGS) $(libnss_mdns4_la_OBJECTS) $(libnss_mdns4_la_LIBADD) $(LIBS)
libnss_mdns4_minimal.la: $(libnss_mdns4_minimal_la_OBJECTS) $(libnss_mdns4_minimal_la_DEPENDENCIES) 
	$(LINK) $(am_libnss_mdns4_minimal_la_rpath) $(libnss_mdns4_minimal_la_LDFLAGS) $(libnss_mdns4_minimal_la_OBJECTS) $(libnss_mdns4_minimal_la_LIBADD) $(LIBS)
libnss_mdns6.la: $(libnss_mdns6_la_OBJECTS) $(libnss_mdns6_la_DEPENDENCIES) 
	$(LINK) $(am_libnss_mdns6_la_rpath) $(libnss_mdns6_la_LDFLAGS) $(libnss_mdns6_la_OBJECTS) $(libnss_mdns6_la_LIBADD) $(LIBS)
libnss_mdns6_minimal.la: $(libnss_mdns6_minimal_la_OBJECTS) $(libnss_mdns6_minimal_la_DEPENDENCIES) 
	$(LINK) $(am_libnss_mdns6_minimal_la_rpath) $(libnss_mdns6_minimal_la_LDFLAGS) $(libnss_mdns6_minimal_la_OBJECTS) $(libnss_mdns6_minimal_la_LIBADD) $(LIBS)
libnss_mdns_minimal.la: $(libnss_mdns_minimal_la_OBJECTS) $(libnss_mdns_minimal_la_DEPENDENCIES) 
	$(LINK) $(am_libnss_mdns_minimal_la_rpath) $(libnss_mdns_minimal_la_LDFLAGS) $(libnss_mdns_minimal_la_OBJECTS) $(libnss_mdns_minimal_la_LIBADD) $(LIBS)
nss_mdns.la: $(nss_mdns_la_OBJECTS) $(nss_mdns_la_DEPENDENCIES) 
	$(LINK) $(am_nss_mdns_la_rpath) $(nss_mdns_la_LDFLAGS) $(nss_mdns_la_OBJECTS) $(nss_mdns_la_LIBADD) $(LIBS)
nss_mdns4.la: $(nss_mdns4_la_OBJECTS) $(nss_mdns4_la_DEPENDENCIES) 
	$(LINK) $(am_nss_mdns4_la_rpath) $(nss_mdns4_la_LDFLAGS) $(nss_mdns4_la_OBJECTS) $(nss_mdns4_la_LIBADD) $(LIBS)
nss_mdns4_minimal.la: $(nss_mdns4_minimal_la_OBJECTS) $(nss_mdns4_minimal_la_DEPENDENCIES) 
	$(LINK) $(am_nss_mdns4_minimal_la_rpath) $(nss_mdns4_minimal_la_LDFLAGS) $(nss_mdns4_minimal_la_OBJECTS) $(nss_mdns4_minimal_la_LIBADD) $(LIBS)
nss_mdns6.la: $(nss_mdns6_la_OBJECTS) $(nss_mdns6_la_DEPENDENCIES) 
	$(LINK) $(am_nss_mdns6_la_rpath) $(nss_mdns6_la_LDFLAGS) $(nss_mdns6_la_OBJECTS) $(nss_mdns6_la_LIBADD) $(LIBS)
nss_mdns6_minimal.la: $(nss_mdns6_minimal_la_OBJECTS) $(nss_mdns6_minimal_la_DEPENDENCIES) 
	$(LINK) $(am_nss_mdns6_minimal_la_rpath) $(nss_mdns6_minimal_la_LDFLAGS) $(nss_mdns6_minimal_la_OBJECTS) $(nss_mdns6_minimal_la_LIBADD) $(LIBS)
nss_mdns_minimal.la: $(nss_mdns_minimal_la_OBJECTS) $(nss_mdns_minimal_la_DEPENDENCIES) 
	$(LINK) $(am_nss_mdns_minimal_la_rpath) $(nss_mdns_minimal_la_LDFLAGS) $(nss_mdns_minimal_la_OBJECTS) $(nss_mdns_minimal_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
avahi-test$(EXEEXT): $(avahi_test_OBJECTS) $(avahi_test_DEPENDENCIES) 
	@rm -f avahi-test$(EXEEXT)
	$(LINK) $(avahi_test_LDFLAGS) $(avahi_test_OBJECTS) $(avahi_test_LDADD) $(LIBS)
mdns-test$(EXEEXT): $(mdns_test_OBJECTS) $(mdns_test_DEPENDENCIES) 
	@rm -f mdns-test$(EXEEXT)
	$(LINK) $(mdns_test_LDFLAGS) $(mdns_test_OBJECTS) $(mdns_test_LDADD) $(LIBS)
nss-test$(EXEEXT): $(nss_test_OBJECTS) $(nss_test_DEPENDENCIES) 
	@rm -f nss-test$(EXEEXT)
	$(LINK) $(nss_test_LDFLAGS) $(nss_test_OBJECTS) $(nss_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/avahi-test.Po
include ./$(DEPDIR)/avahi.Po
include ./$(DEPDIR)/dns.Po
include ./$(DEPDIR)/libnss_mdns4_la-avahi.Plo
include ./$(DEPDIR)/libnss_mdns4_la-dns.Plo
include ./$(DEPDIR)/libnss_mdns4_la-nss.Plo
include ./$(DEPDIR)/libnss_mdns4_la-query.Plo
include ./$(DEPDIR)/libnss_mdns4_la-util.Plo
include ./$(DEPDIR)/libnss_mdns4_minimal_la-avahi.Plo
include ./$(DEPDIR)/libnss_mdns4_minimal_la-dns.Plo
include ./$(DEPDIR)/libnss_mdns4_minimal_la-nss.Plo
include ./$(DEPDIR)/libnss_mdns4_minimal_la-query.Plo
include ./$(DEPDIR)/libnss_mdns4_minimal_la-util.Plo
include ./$(DEPDIR)/libnss_mdns6_la-avahi.Plo
include ./$(DEPDIR)/libnss_mdns6_la-dns.Plo
include ./$(DEPDIR)/libnss_mdns6_la-nss.Plo
include ./$(DEPDIR)/libnss_mdns6_la-query.Plo
include ./$(DEPDIR)/libnss_mdns6_la-util.Plo
include ./$(DEPDIR)/libnss_mdns6_minimal_la-avahi.Plo
include ./$(DEPDIR)/libnss_mdns6_minimal_la-dns.Plo
include ./$(DEPDIR)/libnss_mdns6_minimal_la-nss.Plo
include ./$(DEPDIR)/libnss_mdns6_minimal_la-query.Plo
include ./$(DEPDIR)/libnss_mdns6_minimal_la-util.Plo
include ./$(DEPDIR)/libnss_mdns_la-avahi.Plo
include ./$(DEPDIR)/libnss_mdns_la-dns.Plo
include ./$(DEPDIR)/libnss_mdns_la-nss.Plo
include ./$(DEPDIR)/libnss_mdns_la-query.Plo
include ./$(DEPDIR)/libnss_mdns_la-util.Plo
include ./$(DEPDIR)/libnss_mdns_minimal_la-avahi.Plo
include ./$(DEPDIR)/libnss_mdns_minimal_la-dns.Plo
include ./$(DEPDIR)/libnss_mdns_minimal_la-nss.Plo
include ./$(DEPDIR)/libnss_mdns_minimal_la-query.Plo
include ./$(DEPDIR)/libnss_mdns_minimal_la-util.Plo
include ./$(DEPDIR)/mdns-test.Po
include ./$(DEPDIR)/nss-test.Po
include ./$(DEPDIR)/nss_mdns4_la-avahi.Plo
include ./$(DEPDIR)/nss_mdns4_la-bsdnss.Plo
include ./$(DEPDIR)/nss_mdns4_la-dns.Plo
include ./$(DEPDIR)/nss_mdns4_la-query.Plo
include ./$(DEPDIR)/nss_mdns4_la-util.Plo
include ./$(DEPDIR)/nss_mdns4_minimal_la-avahi.Plo
include ./$(DEPDIR)/nss_mdns4_minimal_la-bsdnss.Plo
include ./$(DEPDIR)/nss_mdns4_minimal_la-dns.Plo
include ./$(DEPDIR)/nss_mdns4_minimal_la-query.Plo
include ./$(DEPDIR)/nss_mdns4_minimal_la-util.Plo
include ./$(DEPDIR)/nss_mdns6_la-avahi.Plo
include ./$(DEPDIR)/nss_mdns6_la-bsdnss.Plo
include ./$(DEPDIR)/nss_mdns6_la-dns.Plo
include ./$(DEPDIR)/nss_mdns6_la-query.Plo
include ./$(DEPDIR)/nss_mdns6_la-util.Plo
include ./$(DEPDIR)/nss_mdns6_minimal_la-avahi.Plo
include ./$(DEPDIR)/nss_mdns6_minimal_la-bsdnss.Plo
include ./$(DEPDIR)/nss_mdns6_minimal_la-dns.Plo
include ./$(DEPDIR)/nss_mdns6_minimal_la-query.Plo
include ./$(DEPDIR)/nss_mdns6_minimal_la-util.Plo
include ./$(DEPDIR)/nss_mdns_la-avahi.Plo
include ./$(DEPDIR)/nss_mdns_la-bsdnss.Plo
include ./$(DEPDIR)/nss_mdns_la-dns.Plo
include ./$(DEPDIR)/nss_mdns_la-query.Plo
include ./$(DEPDIR)/nss_mdns_la-util.Plo
include ./$(DEPDIR)/nss_mdns_minimal_la-avahi.Plo
include ./$(DEPDIR)/nss_mdns_minimal_la-bsdnss.Plo
include ./$(DEPDIR)/nss_mdns_minimal_la-dns.Plo
include ./$(DEPDIR)/nss_mdns_minimal_la-query.Plo
include ./$(DEPDIR)/nss_mdns_minimal_la-util.Plo
include ./$(DEPDIR)/query.Po
include ./$(DEPDIR)/util.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libnss_mdns_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_la-util.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_la-util.Tpo" -c -o libnss_mdns_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_la-util.Tpo" "$(DEPDIR)/libnss_mdns_la-util.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_la-util.Tpo"; exit 1; fi
#	source='util.c' object='libnss_mdns_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libnss_mdns_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_la-avahi.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_la-avahi.Tpo" -c -o libnss_mdns_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_la-avahi.Tpo" "$(DEPDIR)/libnss_mdns_la-avahi.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='libnss_mdns_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

libnss_mdns_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_la-query.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_la-query.Tpo" -c -o libnss_mdns_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_la-query.Tpo" "$(DEPDIR)/libnss_mdns_la-query.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_la-query.Tpo"; exit 1; fi
#	source='query.c' object='libnss_mdns_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

libnss_mdns_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_la-dns.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_la-dns.Tpo" -c -o libnss_mdns_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_la-dns.Tpo" "$(DEPDIR)/libnss_mdns_la-dns.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='libnss_mdns_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

libnss_mdns_la-nss.lo: nss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_la-nss.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_la-nss.Tpo" -c -o libnss_mdns_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_la-nss.Tpo" "$(DEPDIR)/libnss_mdns_la-nss.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_la-nss.Tpo"; exit 1; fi
#	source='nss.c' object='libnss_mdns_la-nss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c

libnss_mdns4_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_la-util.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_la-util.Tpo" -c -o libnss_mdns4_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_la-util.Tpo" "$(DEPDIR)/libnss_mdns4_la-util.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_la-util.Tpo"; exit 1; fi
#	source='util.c' object='libnss_mdns4_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libnss_mdns4_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_la-avahi.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_la-avahi.Tpo" -c -o libnss_mdns4_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_la-avahi.Tpo" "$(DEPDIR)/libnss_mdns4_la-avahi.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='libnss_mdns4_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

libnss_mdns4_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_la-query.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_la-query.Tpo" -c -o libnss_mdns4_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_la-query.Tpo" "$(DEPDIR)/libnss_mdns4_la-query.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_la-query.Tpo"; exit 1; fi
#	source='query.c' object='libnss_mdns4_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

libnss_mdns4_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_la-dns.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_la-dns.Tpo" -c -o libnss_mdns4_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_la-dns.Tpo" "$(DEPDIR)/libnss_mdns4_la-dns.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='libnss_mdns4_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

libnss_mdns4_la-nss.lo: nss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_la-nss.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_la-nss.Tpo" -c -o libnss_mdns4_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_la-nss.Tpo" "$(DEPDIR)/libnss_mdns4_la-nss.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_la-nss.Tpo"; exit 1; fi
#	source='nss.c' object='libnss_mdns4_la-nss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c

libnss_mdns4_minimal_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_minimal_la-util.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_minimal_la-util.Tpo" -c -o libnss_mdns4_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_minimal_la-util.Tpo" "$(DEPDIR)/libnss_mdns4_minimal_la-util.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_minimal_la-util.Tpo"; exit 1; fi
#	source='util.c' object='libnss_mdns4_minimal_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libnss_mdns4_minimal_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_minimal_la-avahi.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_minimal_la-avahi.Tpo" -c -o libnss_mdns4_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_minimal_la-avahi.Tpo" "$(DEPDIR)/libnss_mdns4_minimal_la-avahi.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_minimal_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='libnss_mdns4_minimal_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

libnss_mdns4_minimal_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_minimal_la-query.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_minimal_la-query.Tpo" -c -o libnss_mdns4_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_minimal_la-query.Tpo" "$(DEPDIR)/libnss_mdns4_minimal_la-query.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_minimal_la-query.Tpo"; exit 1; fi
#	source='query.c' object='libnss_mdns4_minimal_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

libnss_mdns4_minimal_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_minimal_la-dns.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_minimal_la-dns.Tpo" -c -o libnss_mdns4_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_minimal_la-dns.Tpo" "$(DEPDIR)/libnss_mdns4_minimal_la-dns.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_minimal_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='libnss_mdns4_minimal_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

libnss_mdns4_minimal_la-nss.lo: nss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns4_minimal_la-nss.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns4_minimal_la-nss.Tpo" -c -o libnss_mdns4_minimal_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c; \
	then mv -f "$(DEPDIR)/libnss_mdns4_minimal_la-nss.Tpo" "$(DEPDIR)/libnss_mdns4_minimal_la-nss.Plo"; else rm -f "$(DEPDIR)/libnss_mdns4_minimal_la-nss.Tpo"; exit 1; fi
#	source='nss.c' object='libnss_mdns4_minimal_la-nss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns4_minimal_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c

libnss_mdns6_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_la-util.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_la-util.Tpo" -c -o libnss_mdns6_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_la-util.Tpo" "$(DEPDIR)/libnss_mdns6_la-util.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_la-util.Tpo"; exit 1; fi
#	source='util.c' object='libnss_mdns6_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libnss_mdns6_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_la-avahi.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_la-avahi.Tpo" -c -o libnss_mdns6_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_la-avahi.Tpo" "$(DEPDIR)/libnss_mdns6_la-avahi.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='libnss_mdns6_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

libnss_mdns6_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_la-query.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_la-query.Tpo" -c -o libnss_mdns6_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_la-query.Tpo" "$(DEPDIR)/libnss_mdns6_la-query.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_la-query.Tpo"; exit 1; fi
#	source='query.c' object='libnss_mdns6_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

libnss_mdns6_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_la-dns.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_la-dns.Tpo" -c -o libnss_mdns6_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_la-dns.Tpo" "$(DEPDIR)/libnss_mdns6_la-dns.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='libnss_mdns6_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

libnss_mdns6_la-nss.lo: nss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_la-nss.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_la-nss.Tpo" -c -o libnss_mdns6_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_la-nss.Tpo" "$(DEPDIR)/libnss_mdns6_la-nss.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_la-nss.Tpo"; exit 1; fi
#	source='nss.c' object='libnss_mdns6_la-nss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c

libnss_mdns6_minimal_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_minimal_la-util.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_minimal_la-util.Tpo" -c -o libnss_mdns6_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_minimal_la-util.Tpo" "$(DEPDIR)/libnss_mdns6_minimal_la-util.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_minimal_la-util.Tpo"; exit 1; fi
#	source='util.c' object='libnss_mdns6_minimal_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libnss_mdns6_minimal_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_minimal_la-avahi.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_minimal_la-avahi.Tpo" -c -o libnss_mdns6_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_minimal_la-avahi.Tpo" "$(DEPDIR)/libnss_mdns6_minimal_la-avahi.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_minimal_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='libnss_mdns6_minimal_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

libnss_mdns6_minimal_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_minimal_la-query.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_minimal_la-query.Tpo" -c -o libnss_mdns6_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_minimal_la-query.Tpo" "$(DEPDIR)/libnss_mdns6_minimal_la-query.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_minimal_la-query.Tpo"; exit 1; fi
#	source='query.c' object='libnss_mdns6_minimal_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

libnss_mdns6_minimal_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_minimal_la-dns.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_minimal_la-dns.Tpo" -c -o libnss_mdns6_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_minimal_la-dns.Tpo" "$(DEPDIR)/libnss_mdns6_minimal_la-dns.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_minimal_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='libnss_mdns6_minimal_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

libnss_mdns6_minimal_la-nss.lo: nss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns6_minimal_la-nss.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns6_minimal_la-nss.Tpo" -c -o libnss_mdns6_minimal_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c; \
	then mv -f "$(DEPDIR)/libnss_mdns6_minimal_la-nss.Tpo" "$(DEPDIR)/libnss_mdns6_minimal_la-nss.Plo"; else rm -f "$(DEPDIR)/libnss_mdns6_minimal_la-nss.Tpo"; exit 1; fi
#	source='nss.c' object='libnss_mdns6_minimal_la-nss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns6_minimal_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c

libnss_mdns_minimal_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_minimal_la-util.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_minimal_la-util.Tpo" -c -o libnss_mdns_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_minimal_la-util.Tpo" "$(DEPDIR)/libnss_mdns_minimal_la-util.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_minimal_la-util.Tpo"; exit 1; fi
#	source='util.c' object='libnss_mdns_minimal_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

libnss_mdns_minimal_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_minimal_la-avahi.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_minimal_la-avahi.Tpo" -c -o libnss_mdns_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_minimal_la-avahi.Tpo" "$(DEPDIR)/libnss_mdns_minimal_la-avahi.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_minimal_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='libnss_mdns_minimal_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

libnss_mdns_minimal_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_minimal_la-query.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_minimal_la-query.Tpo" -c -o libnss_mdns_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_minimal_la-query.Tpo" "$(DEPDIR)/libnss_mdns_minimal_la-query.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_minimal_la-query.Tpo"; exit 1; fi
#	source='query.c' object='libnss_mdns_minimal_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

libnss_mdns_minimal_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_minimal_la-dns.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_minimal_la-dns.Tpo" -c -o libnss_mdns_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_minimal_la-dns.Tpo" "$(DEPDIR)/libnss_mdns_minimal_la-dns.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_minimal_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='libnss_mdns_minimal_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

libnss_mdns_minimal_la-nss.lo: nss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT libnss_mdns_minimal_la-nss.lo -MD -MP -MF "$(DEPDIR)/libnss_mdns_minimal_la-nss.Tpo" -c -o libnss_mdns_minimal_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c; \
	then mv -f "$(DEPDIR)/libnss_mdns_minimal_la-nss.Tpo" "$(DEPDIR)/libnss_mdns_minimal_la-nss.Plo"; else rm -f "$(DEPDIR)/libnss_mdns_minimal_la-nss.Tpo"; exit 1; fi
#	source='nss.c' object='libnss_mdns_minimal_la-nss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o libnss_mdns_minimal_la-nss.lo `test -f 'nss.c' || echo '$(srcdir)/'`nss.c

nss_mdns_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -MT nss_mdns_la-util.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_la-util.Tpo" -c -o nss_mdns_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/nss_mdns_la-util.Tpo" "$(DEPDIR)/nss_mdns_la-util.Plo"; else rm -f "$(DEPDIR)/nss_mdns_la-util.Tpo"; exit 1; fi
#	source='util.c' object='nss_mdns_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

nss_mdns_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -MT nss_mdns_la-avahi.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_la-avahi.Tpo" -c -o nss_mdns_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/nss_mdns_la-avahi.Tpo" "$(DEPDIR)/nss_mdns_la-avahi.Plo"; else rm -f "$(DEPDIR)/nss_mdns_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='nss_mdns_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

nss_mdns_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -MT nss_mdns_la-query.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_la-query.Tpo" -c -o nss_mdns_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/nss_mdns_la-query.Tpo" "$(DEPDIR)/nss_mdns_la-query.Plo"; else rm -f "$(DEPDIR)/nss_mdns_la-query.Tpo"; exit 1; fi
#	source='query.c' object='nss_mdns_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

nss_mdns_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -MT nss_mdns_la-dns.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_la-dns.Tpo" -c -o nss_mdns_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/nss_mdns_la-dns.Tpo" "$(DEPDIR)/nss_mdns_la-dns.Plo"; else rm -f "$(DEPDIR)/nss_mdns_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='nss_mdns_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

nss_mdns_la-bsdnss.lo: bsdnss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -MT nss_mdns_la-bsdnss.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_la-bsdnss.Tpo" -c -o nss_mdns_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c; \
	then mv -f "$(DEPDIR)/nss_mdns_la-bsdnss.Tpo" "$(DEPDIR)/nss_mdns_la-bsdnss.Plo"; else rm -f "$(DEPDIR)/nss_mdns_la-bsdnss.Tpo"; exit 1; fi
#	source='bsdnss.c' object='nss_mdns_la-bsdnss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c

nss_mdns4_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_la-util.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_la-util.Tpo" -c -o nss_mdns4_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_la-util.Tpo" "$(DEPDIR)/nss_mdns4_la-util.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_la-util.Tpo"; exit 1; fi
#	source='util.c' object='nss_mdns4_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

nss_mdns4_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_la-avahi.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_la-avahi.Tpo" -c -o nss_mdns4_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_la-avahi.Tpo" "$(DEPDIR)/nss_mdns4_la-avahi.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='nss_mdns4_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

nss_mdns4_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_la-query.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_la-query.Tpo" -c -o nss_mdns4_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_la-query.Tpo" "$(DEPDIR)/nss_mdns4_la-query.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_la-query.Tpo"; exit 1; fi
#	source='query.c' object='nss_mdns4_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

nss_mdns4_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_la-dns.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_la-dns.Tpo" -c -o nss_mdns4_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_la-dns.Tpo" "$(DEPDIR)/nss_mdns4_la-dns.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='nss_mdns4_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

nss_mdns4_la-bsdnss.lo: bsdnss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_la-bsdnss.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_la-bsdnss.Tpo" -c -o nss_mdns4_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_la-bsdnss.Tpo" "$(DEPDIR)/nss_mdns4_la-bsdnss.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_la-bsdnss.Tpo"; exit 1; fi
#	source='bsdnss.c' object='nss_mdns4_la-bsdnss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c

nss_mdns4_minimal_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_minimal_la-util.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_minimal_la-util.Tpo" -c -o nss_mdns4_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_minimal_la-util.Tpo" "$(DEPDIR)/nss_mdns4_minimal_la-util.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_minimal_la-util.Tpo"; exit 1; fi
#	source='util.c' object='nss_mdns4_minimal_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

nss_mdns4_minimal_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_minimal_la-avahi.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_minimal_la-avahi.Tpo" -c -o nss_mdns4_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_minimal_la-avahi.Tpo" "$(DEPDIR)/nss_mdns4_minimal_la-avahi.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_minimal_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='nss_mdns4_minimal_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

nss_mdns4_minimal_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_minimal_la-query.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_minimal_la-query.Tpo" -c -o nss_mdns4_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_minimal_la-query.Tpo" "$(DEPDIR)/nss_mdns4_minimal_la-query.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_minimal_la-query.Tpo"; exit 1; fi
#	source='query.c' object='nss_mdns4_minimal_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

nss_mdns4_minimal_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_minimal_la-dns.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_minimal_la-dns.Tpo" -c -o nss_mdns4_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_minimal_la-dns.Tpo" "$(DEPDIR)/nss_mdns4_minimal_la-dns.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_minimal_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='nss_mdns4_minimal_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

nss_mdns4_minimal_la-bsdnss.lo: bsdnss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns4_minimal_la-bsdnss.lo -MD -MP -MF "$(DEPDIR)/nss_mdns4_minimal_la-bsdnss.Tpo" -c -o nss_mdns4_minimal_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c; \
	then mv -f "$(DEPDIR)/nss_mdns4_minimal_la-bsdnss.Tpo" "$(DEPDIR)/nss_mdns4_minimal_la-bsdnss.Plo"; else rm -f "$(DEPDIR)/nss_mdns4_minimal_la-bsdnss.Tpo"; exit 1; fi
#	source='bsdnss.c' object='nss_mdns4_minimal_la-bsdnss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns4_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns4_minimal_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c

nss_mdns6_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_la-util.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_la-util.Tpo" -c -o nss_mdns6_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_la-util.Tpo" "$(DEPDIR)/nss_mdns6_la-util.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_la-util.Tpo"; exit 1; fi
#	source='util.c' object='nss_mdns6_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

nss_mdns6_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_la-avahi.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_la-avahi.Tpo" -c -o nss_mdns6_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_la-avahi.Tpo" "$(DEPDIR)/nss_mdns6_la-avahi.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='nss_mdns6_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

nss_mdns6_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_la-query.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_la-query.Tpo" -c -o nss_mdns6_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_la-query.Tpo" "$(DEPDIR)/nss_mdns6_la-query.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_la-query.Tpo"; exit 1; fi
#	source='query.c' object='nss_mdns6_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

nss_mdns6_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_la-dns.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_la-dns.Tpo" -c -o nss_mdns6_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_la-dns.Tpo" "$(DEPDIR)/nss_mdns6_la-dns.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='nss_mdns6_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

nss_mdns6_la-bsdnss.lo: bsdnss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_la-bsdnss.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_la-bsdnss.Tpo" -c -o nss_mdns6_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_la-bsdnss.Tpo" "$(DEPDIR)/nss_mdns6_la-bsdnss.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_la-bsdnss.Tpo"; exit 1; fi
#	source='bsdnss.c' object='nss_mdns6_la-bsdnss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c

nss_mdns6_minimal_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_minimal_la-util.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_minimal_la-util.Tpo" -c -o nss_mdns6_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_minimal_la-util.Tpo" "$(DEPDIR)/nss_mdns6_minimal_la-util.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_minimal_la-util.Tpo"; exit 1; fi
#	source='util.c' object='nss_mdns6_minimal_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

nss_mdns6_minimal_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_minimal_la-avahi.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_minimal_la-avahi.Tpo" -c -o nss_mdns6_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_minimal_la-avahi.Tpo" "$(DEPDIR)/nss_mdns6_minimal_la-avahi.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_minimal_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='nss_mdns6_minimal_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

nss_mdns6_minimal_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_minimal_la-query.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_minimal_la-query.Tpo" -c -o nss_mdns6_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_minimal_la-query.Tpo" "$(DEPDIR)/nss_mdns6_minimal_la-query.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_minimal_la-query.Tpo"; exit 1; fi
#	source='query.c' object='nss_mdns6_minimal_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

nss_mdns6_minimal_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_minimal_la-dns.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_minimal_la-dns.Tpo" -c -o nss_mdns6_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_minimal_la-dns.Tpo" "$(DEPDIR)/nss_mdns6_minimal_la-dns.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_minimal_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='nss_mdns6_minimal_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

nss_mdns6_minimal_la-bsdnss.lo: bsdnss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns6_minimal_la-bsdnss.lo -MD -MP -MF "$(DEPDIR)/nss_mdns6_minimal_la-bsdnss.Tpo" -c -o nss_mdns6_minimal_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c; \
	then mv -f "$(DEPDIR)/nss_mdns6_minimal_la-bsdnss.Tpo" "$(DEPDIR)/nss_mdns6_minimal_la-bsdnss.Plo"; else rm -f "$(DEPDIR)/nss_mdns6_minimal_la-bsdnss.Tpo"; exit 1; fi
#	source='bsdnss.c' object='nss_mdns6_minimal_la-bsdnss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns6_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns6_minimal_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c

nss_mdns_minimal_la-util.lo: util.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns_minimal_la-util.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_minimal_la-util.Tpo" -c -o nss_mdns_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
	then mv -f "$(DEPDIR)/nss_mdns_minimal_la-util.Tpo" "$(DEPDIR)/nss_mdns_minimal_la-util.Plo"; else rm -f "$(DEPDIR)/nss_mdns_minimal_la-util.Tpo"; exit 1; fi
#	source='util.c' object='nss_mdns_minimal_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_minimal_la-util.lo `test -f 'util.c' || echo '$(srcdir)/'`util.c

nss_mdns_minimal_la-avahi.lo: avahi.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns_minimal_la-avahi.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_minimal_la-avahi.Tpo" -c -o nss_mdns_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c; \
	then mv -f "$(DEPDIR)/nss_mdns_minimal_la-avahi.Tpo" "$(DEPDIR)/nss_mdns_minimal_la-avahi.Plo"; else rm -f "$(DEPDIR)/nss_mdns_minimal_la-avahi.Tpo"; exit 1; fi
#	source='avahi.c' object='nss_mdns_minimal_la-avahi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_minimal_la-avahi.lo `test -f 'avahi.c' || echo '$(srcdir)/'`avahi.c

nss_mdns_minimal_la-query.lo: query.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns_minimal_la-query.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_minimal_la-query.Tpo" -c -o nss_mdns_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c; \
	then mv -f "$(DEPDIR)/nss_mdns_minimal_la-query.Tpo" "$(DEPDIR)/nss_mdns_minimal_la-query.Plo"; else rm -f "$(DEPDIR)/nss_mdns_minimal_la-query.Tpo"; exit 1; fi
#	source='query.c' object='nss_mdns_minimal_la-query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_minimal_la-query.lo `test -f 'query.c' || echo '$(srcdir)/'`query.c

nss_mdns_minimal_la-dns.lo: dns.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns_minimal_la-dns.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_minimal_la-dns.Tpo" -c -o nss_mdns_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c; \
	then mv -f "$(DEPDIR)/nss_mdns_minimal_la-dns.Tpo" "$(DEPDIR)/nss_mdns_minimal_la-dns.Plo"; else rm -f "$(DEPDIR)/nss_mdns_minimal_la-dns.Tpo"; exit 1; fi
#	source='dns.c' object='nss_mdns_minimal_la-dns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_minimal_la-dns.lo `test -f 'dns.c' || echo '$(srcdir)/'`dns.c

nss_mdns_minimal_la-bsdnss.lo: bsdnss.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -MT nss_mdns_minimal_la-bsdnss.lo -MD -MP -MF "$(DEPDIR)/nss_mdns_minimal_la-bsdnss.Tpo" -c -o nss_mdns_minimal_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c; \
	then mv -f "$(DEPDIR)/nss_mdns_minimal_la-bsdnss.Tpo" "$(DEPDIR)/nss_mdns_minimal_la-bsdnss.Plo"; else rm -f "$(DEPDIR)/nss_mdns_minimal_la-bsdnss.Tpo"; exit 1; fi
#	source='bsdnss.c' object='nss_mdns_minimal_la-bsdnss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nss_mdns_minimal_la_CFLAGS) $(CFLAGS) -c -o nss_mdns_minimal_la-bsdnss.lo `test -f 'bsdnss.c' || echo '$(srcdir)/'`bsdnss.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-exec-hook \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-hook uninstall-info-am \
	uninstall-libLTLIBRARIES


install-exec-hook:
	rm -f $(DESTDIR)$(libdir)/libnss_mdns.la 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns_minimal.la 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns4.la 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns4_minimal.la 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns6.la 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns6_minimal.la 

uninstall-hook:
	rm -f $(DESTDIR)$(libdir)/libnss_mdns.so.2 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns_minimal.so.2 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns4.so.2 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns4_minimal.so.2 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns6.so.2 
	rm -f $(DESTDIR)$(libdir)/libnss_mdns6_minimal.so.2 
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
