# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_capng', [dirname(__file__)])
        except ImportError:
            import _capng
            return _capng
        if fp is not None:
            try:
                _mod = imp.load_module('_capng', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _capng = swig_import_helper()
    del swig_import_helper
else:
    import _capng
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



_capng.CAP_CHOWN_swigconstant(_capng)
CAP_CHOWN = _capng.CAP_CHOWN

_capng.CAP_DAC_OVERRIDE_swigconstant(_capng)
CAP_DAC_OVERRIDE = _capng.CAP_DAC_OVERRIDE

_capng.CAP_DAC_READ_SEARCH_swigconstant(_capng)
CAP_DAC_READ_SEARCH = _capng.CAP_DAC_READ_SEARCH

_capng.CAP_FOWNER_swigconstant(_capng)
CAP_FOWNER = _capng.CAP_FOWNER

_capng.CAP_FSETID_swigconstant(_capng)
CAP_FSETID = _capng.CAP_FSETID

_capng.CAP_KILL_swigconstant(_capng)
CAP_KILL = _capng.CAP_KILL

_capng.CAP_SETGID_swigconstant(_capng)
CAP_SETGID = _capng.CAP_SETGID

_capng.CAP_SETUID_swigconstant(_capng)
CAP_SETUID = _capng.CAP_SETUID

_capng.CAP_SETPCAP_swigconstant(_capng)
CAP_SETPCAP = _capng.CAP_SETPCAP

_capng.CAP_LINUX_IMMUTABLE_swigconstant(_capng)
CAP_LINUX_IMMUTABLE = _capng.CAP_LINUX_IMMUTABLE

_capng.CAP_NET_BIND_SERVICE_swigconstant(_capng)
CAP_NET_BIND_SERVICE = _capng.CAP_NET_BIND_SERVICE

_capng.CAP_NET_BROADCAST_swigconstant(_capng)
CAP_NET_BROADCAST = _capng.CAP_NET_BROADCAST

_capng.CAP_NET_ADMIN_swigconstant(_capng)
CAP_NET_ADMIN = _capng.CAP_NET_ADMIN

_capng.CAP_NET_RAW_swigconstant(_capng)
CAP_NET_RAW = _capng.CAP_NET_RAW

_capng.CAP_IPC_LOCK_swigconstant(_capng)
CAP_IPC_LOCK = _capng.CAP_IPC_LOCK

_capng.CAP_IPC_OWNER_swigconstant(_capng)
CAP_IPC_OWNER = _capng.CAP_IPC_OWNER

_capng.CAP_SYS_MODULE_swigconstant(_capng)
CAP_SYS_MODULE = _capng.CAP_SYS_MODULE

_capng.CAP_SYS_RAWIO_swigconstant(_capng)
CAP_SYS_RAWIO = _capng.CAP_SYS_RAWIO

_capng.CAP_SYS_CHROOT_swigconstant(_capng)
CAP_SYS_CHROOT = _capng.CAP_SYS_CHROOT

_capng.CAP_SYS_PTRACE_swigconstant(_capng)
CAP_SYS_PTRACE = _capng.CAP_SYS_PTRACE

_capng.CAP_SYS_PACCT_swigconstant(_capng)
CAP_SYS_PACCT = _capng.CAP_SYS_PACCT

_capng.CAP_SYS_ADMIN_swigconstant(_capng)
CAP_SYS_ADMIN = _capng.CAP_SYS_ADMIN

_capng.CAP_SYS_BOOT_swigconstant(_capng)
CAP_SYS_BOOT = _capng.CAP_SYS_BOOT

_capng.CAP_SYS_NICE_swigconstant(_capng)
CAP_SYS_NICE = _capng.CAP_SYS_NICE

_capng.CAP_SYS_RESOURCE_swigconstant(_capng)
CAP_SYS_RESOURCE = _capng.CAP_SYS_RESOURCE

_capng.CAP_SYS_TIME_swigconstant(_capng)
CAP_SYS_TIME = _capng.CAP_SYS_TIME

_capng.CAP_SYS_TTY_CONFIG_swigconstant(_capng)
CAP_SYS_TTY_CONFIG = _capng.CAP_SYS_TTY_CONFIG

_capng.CAP_MKNOD_swigconstant(_capng)
CAP_MKNOD = _capng.CAP_MKNOD

_capng.CAP_LEASE_swigconstant(_capng)
CAP_LEASE = _capng.CAP_LEASE

_capng.CAP_AUDIT_WRITE_swigconstant(_capng)
CAP_AUDIT_WRITE = _capng.CAP_AUDIT_WRITE

_capng.CAP_AUDIT_CONTROL_swigconstant(_capng)
CAP_AUDIT_CONTROL = _capng.CAP_AUDIT_CONTROL

_capng.CAP_SETFCAP_swigconstant(_capng)
CAP_SETFCAP = _capng.CAP_SETFCAP

_capng.CAP_MAC_OVERRIDE_swigconstant(_capng)
CAP_MAC_OVERRIDE = _capng.CAP_MAC_OVERRIDE

_capng.CAP_MAC_ADMIN_swigconstant(_capng)
CAP_MAC_ADMIN = _capng.CAP_MAC_ADMIN

_capng.CAP_SYSLOG_swigconstant(_capng)
CAP_SYSLOG = _capng.CAP_SYSLOG

_capng.CAP_WAKE_ALARM_swigconstant(_capng)
CAP_WAKE_ALARM = _capng.CAP_WAKE_ALARM

_capng.CAP_BLOCK_SUSPEND_swigconstant(_capng)
CAP_BLOCK_SUSPEND = _capng.CAP_BLOCK_SUSPEND

_capng.CAP_AUDIT_READ_swigconstant(_capng)
CAP_AUDIT_READ = _capng.CAP_AUDIT_READ

_capng.CAP_LAST_CAP_swigconstant(_capng)
CAP_LAST_CAP = _capng.CAP_LAST_CAP

_capng.CAPNG_DROP_swigconstant(_capng)
CAPNG_DROP = _capng.CAPNG_DROP

_capng.CAPNG_ADD_swigconstant(_capng)
CAPNG_ADD = _capng.CAPNG_ADD

_capng.CAPNG_EFFECTIVE_swigconstant(_capng)
CAPNG_EFFECTIVE = _capng.CAPNG_EFFECTIVE

_capng.CAPNG_PERMITTED_swigconstant(_capng)
CAPNG_PERMITTED = _capng.CAPNG_PERMITTED

_capng.CAPNG_INHERITABLE_swigconstant(_capng)
CAPNG_INHERITABLE = _capng.CAPNG_INHERITABLE

_capng.CAPNG_BOUNDING_SET_swigconstant(_capng)
CAPNG_BOUNDING_SET = _capng.CAPNG_BOUNDING_SET

_capng.CAPNG_SELECT_CAPS_swigconstant(_capng)
CAPNG_SELECT_CAPS = _capng.CAPNG_SELECT_CAPS

_capng.CAPNG_SELECT_BOUNDS_swigconstant(_capng)
CAPNG_SELECT_BOUNDS = _capng.CAPNG_SELECT_BOUNDS

_capng.CAPNG_SELECT_BOTH_swigconstant(_capng)
CAPNG_SELECT_BOTH = _capng.CAPNG_SELECT_BOTH

_capng.CAPNG_FAIL_swigconstant(_capng)
CAPNG_FAIL = _capng.CAPNG_FAIL

_capng.CAPNG_NONE_swigconstant(_capng)
CAPNG_NONE = _capng.CAPNG_NONE

_capng.CAPNG_PARTIAL_swigconstant(_capng)
CAPNG_PARTIAL = _capng.CAPNG_PARTIAL

_capng.CAPNG_FULL_swigconstant(_capng)
CAPNG_FULL = _capng.CAPNG_FULL

_capng.CAPNG_PRINT_STDOUT_swigconstant(_capng)
CAPNG_PRINT_STDOUT = _capng.CAPNG_PRINT_STDOUT

_capng.CAPNG_PRINT_BUFFER_swigconstant(_capng)
CAPNG_PRINT_BUFFER = _capng.CAPNG_PRINT_BUFFER

_capng.CAPNG_NO_FLAG_swigconstant(_capng)
CAPNG_NO_FLAG = _capng.CAPNG_NO_FLAG

_capng.CAPNG_DROP_SUPP_GRP_swigconstant(_capng)
CAPNG_DROP_SUPP_GRP = _capng.CAPNG_DROP_SUPP_GRP

_capng.CAPNG_CLEAR_BOUNDING_swigconstant(_capng)
CAPNG_CLEAR_BOUNDING = _capng.CAPNG_CLEAR_BOUNDING

_capng.CAPNG_INIT_SUPP_GRP_swigconstant(_capng)
CAPNG_INIT_SUPP_GRP = _capng.CAPNG_INIT_SUPP_GRP

def capng_clear(set: 'capng_select_t') -> "void":
    return _capng.capng_clear(set)
capng_clear = _capng.capng_clear

def capng_fill(set: 'capng_select_t') -> "void":
    return _capng.capng_fill(set)
capng_fill = _capng.capng_fill

def capng_setpid(pid: 'int') -> "void":
    return _capng.capng_setpid(pid)
capng_setpid = _capng.capng_setpid

def capng_get_caps_process() -> "int":
    return _capng.capng_get_caps_process()
capng_get_caps_process = _capng.capng_get_caps_process

def capng_update(action: 'capng_act_t', type: 'capng_type_t', capability: 'unsigned int') -> "int":
    return _capng.capng_update(action, type, capability)
capng_update = _capng.capng_update

def capng_updatev(action: 'capng_act_t', type: 'capng_type_t', capability: 'unsigned int') -> "int":
    return _capng.capng_updatev(action, type, capability)
capng_updatev = _capng.capng_updatev

def capng_apply(set: 'capng_select_t') -> "int":
    return _capng.capng_apply(set)
capng_apply = _capng.capng_apply

def capng_lock() -> "int":
    return _capng.capng_lock()
capng_lock = _capng.capng_lock

def capng_change_id(uid: 'int', gid: 'int', flag: 'capng_flags_t') -> "int":
    return _capng.capng_change_id(uid, gid, flag)
capng_change_id = _capng.capng_change_id

def capng_get_caps_fd(fd: 'int') -> "int":
    return _capng.capng_get_caps_fd(fd)
capng_get_caps_fd = _capng.capng_get_caps_fd

def capng_apply_caps_fd(fd: 'int') -> "int":
    return _capng.capng_apply_caps_fd(fd)
capng_apply_caps_fd = _capng.capng_apply_caps_fd

def capng_have_capabilities(set: 'capng_select_t') -> "capng_results_t":
    return _capng.capng_have_capabilities(set)
capng_have_capabilities = _capng.capng_have_capabilities

def capng_have_capability(which: 'capng_type_t', capability: 'unsigned int') -> "int":
    return _capng.capng_have_capability(which, capability)
capng_have_capability = _capng.capng_have_capability

def capng_print_caps_numeric(where: 'capng_print_t', set: 'capng_select_t') -> "char *":
    return _capng.capng_print_caps_numeric(where, set)
capng_print_caps_numeric = _capng.capng_print_caps_numeric

def capng_print_caps_text(where: 'capng_print_t', which: 'capng_type_t') -> "char *":
    return _capng.capng_print_caps_text(where, which)
capng_print_caps_text = _capng.capng_print_caps_text

def capng_name_to_capability(name: 'char const *') -> "int":
    return _capng.capng_name_to_capability(name)
capng_name_to_capability = _capng.capng_name_to_capability

def capng_capability_to_name(capability: 'unsigned int') -> "char const *":
    return _capng.capng_capability_to_name(capability)
capng_capability_to_name = _capng.capng_capability_to_name


