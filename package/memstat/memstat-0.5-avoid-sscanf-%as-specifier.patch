Index: memstat-0.5/memstat.c
===================================================================
--- memstat-0.5.orig/memstat.c
+++ memstat-0.5/memstat.c
@@ -60,7 +60,7 @@ static dev_t convert_to_dev_t(char *str)
 static void read_proc(void)
 {
   unsigned int nread, pid, lo, hi, offs; unsigned long inode; char *p;
-  char dev[80], buff[PATH_MAX + 300], *path;
+  char dev[80], buff[PATH_MAX + 300], path[PATH_MAX + 300];
   DIR *d; struct dirent *ent; FILE *f;
   mapping m;
   d = opendir("/proc");
@@ -76,10 +76,10 @@ static void read_proc(void)
     while (fgets(buff,sizeof(buff),f)) {
       p = strchr(buff,'-');
       if (p) *p=' ';
-      path = 0;
+      path[0] = '\0';
       if ((strlen(buff) == 10) && (strcmp(buff, " (deleted)") == 0))
         continue;
-      nread = sscanf(buff,"%x %x %*s %x %s %lu %as",&lo,&hi,&offs,dev,&inode,&path);
+      nread = sscanf(buff,"%x %x %*s %x %s %lu %s",&lo,&hi,&offs,dev,&inode,path);
       if (nread<5) { 
 	fprintf(stderr,"I don't recognize format of /proc/%d/maps. (nread=%d)\n", pid, nread);
 	exit(1);
@@ -93,8 +93,8 @@ static void read_proc(void)
       m->lo    = lo;
       m->hi    = hi;
       m->valid = 1;
-      if ((nread == 6) && path && path[0]) {
-        m->path = path;
+      if (path && path[0]) {
+	m->path = strdup(path);
       } else {
       	sprintf(buff,"[%04x]:%lu",m->fs,inode);
       	m->path  = strdup(buff);
