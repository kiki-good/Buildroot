diff -Naurr diagnostics-1.3_orig/apps/mifd/mgmtif/dslf_mesh.xml diagnostics-1.3_new/apps/mifd/mgmtif/dslf_mesh.xml
--- diagnostics-1.3_orig/apps/mifd/mgmtif/dslf_mesh.xml	1970-01-01 01:00:00.000000000 +0100
+++ diagnostics-1.3_new/apps/mifd/mgmtif/dslf_mesh.xml	2015-08-14 13:49:22.966485475 +0100
@@ -0,0 +1,26 @@
+ï»¿<?xml version="1.0" encoding="utf-8"?>
+<tns:mgmtns name="urn:broadband-forum-org:Device-2-2" spec="urn:broadband-forum-org:tr-181-2-2-0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="urn:2wire-com:mgmtns-1-0" xsi:schemaLocation="urn:2wire-com:mgmtns-1-0 mgmtns.xsd">
+  <node name="Device" id="Device">
+    <status>mandatory</status>
+    <access>read-only</access>
+    <description>The top-level object for a Device.</description>
+    <type>node</type>
+  </node>
+  <node name="Mesh" id="Device.Mesh">
+    <status>mandatory</status>
+    <access>read-only</access>
+    <description>This object contains parameters relating to Mesh.</description>
+    <type>node</type>
+    <sub>
+      <name>Device</name>
+      <nodeid>Device</nodeid>
+    </sub>
+  </node>
+  <attribute name="Air_Mesh_RT">
+    <nodeid>Device.Mesh</nodeid>
+    <status>mandatory</status>
+    <access>read-only</access>
+    <description>AirTies Mesh Routing Table, data from /proc/air_mesh_rt.</description>
+    <syntax type="string" />
+  </attribute>
+</tns:mgmtns>
\ No newline at end of file
diff -Naurr diagnostics-1.3_orig/apps/mifd/mgmtif/mgmtif_dslf.h diagnostics-1.3_new/apps/mifd/mgmtif/mgmtif_dslf.h
--- diagnostics-1.3_orig/apps/mifd/mgmtif/mgmtif_dslf.h	2014-12-04 12:42:15.000000000 +0000
+++ diagnostics-1.3_new/apps/mifd/mgmtif/mgmtif_dslf.h	2015-08-14 16:04:24.008525797 +0100
@@ -962,6 +962,19 @@
 		int notification, mif_notify_t notify_func, mifd_conn_t *mconn);
 #define DSLF_DEVICE_MANAGEMENTSERVER_X_00D09E_XMPPCONNREQ_NOTIFY mif_dslf_managementserver_x_00d09e_xmppconnreq_notify
 
+/* mgmtif_dslf_device_mesh  */
+int mif_dslf_mesh_reg (struct mif_request_s *req);
+#define DSLF_DEVICE_MESH_REG  mif_dslf_mesh_reg
+
+int mif_dslf_mesh_get_config (struct mif_request_s *req, int id);
+#define DSLF_DEVICE_MESH_GET_CONFIG mif_dslf_mesh_get_config
+
+int mif_dslf_mesh_set_config (struct mif_request_s *req, int id);
+#define DSLF_DEVICE_MESH_SET_CONFIG mif_dslf_mesh_set_config
+
+int mif_dslf_mesh_notify (struct mif_request_s *req, int id,
+	int notification, mif_notify_t notify_func, mifd_conn_t *mconn);
+#define DSLF_DEVICE_MESH_NOTIFY mif_dslf_mesh_notify
 
 /* Name: Services
  * Id: Device.Services
diff -Naurr diagnostics-1.3_orig/apps/mifd/mgmtif/mgmtif_dslf_mesh.c diagnostics-1.3_new/apps/mifd/mgmtif/mgmtif_dslf_mesh.c
--- diagnostics-1.3_orig/apps/mifd/mgmtif/mgmtif_dslf_mesh.c	1970-01-01 01:00:00.000000000 +0100
+++ diagnostics-1.3_new/apps/mifd/mgmtif/mgmtif_dslf_mesh.c	2015-08-14 21:35:05.351087786 +0100
@@ -0,0 +1,121 @@
+
+/*
+ *
+ * Copyright (C) 2013  Pace Plc
+ * All Rights Reserved.
+ * Automatically generated by mgmtns.pl. Please do not edit unless you know what you are doing 
+ * as far as changing the datamodels are concerned.
+ */
+/**
+ * filemgmtif_dslf_mesh.c
+ *
+ * Implementation for mgmtif_dslf_mesh
+**/
+
+#include <fcntl.h>
+#include <stdlib.h>
+#include <sys/syslog.h>
+#include <unistd.h>
+#include <librgw_compat/lib_cms.h>
+#include "mgmtif_dslf.h"
+#include "mgmtns_dslf.h"
+#include "vendor_hook_mesh.h"
+#include "vendor_hook_mesh.c"
+#include "vendor_hooks.h"
+
+ 
+ /* shortcut for readability */
+#define DEVICE(x) __CONCAT(DEVICE_MESH_,x)
+
+#define BUFFER_LENGTH	(256)
+
+int
+mif_dslf_mesh_reg(struct mif_request_s *req)
+{
+	struct mif_node_s *mn = NULL;
+	struct mif_attribute_s *ma = NULL;
+	if (!req || !(mn = mif_request_node(req))) {
+		return EINVAL;
+	}
+	if (!mn->mn_attr) {
+		return EOK;
+	}
+	for (ma = mn->mn_attr; ma->ma_name; ma++) {
+		switch (ma->ma_id) {
+			case DEVICE(AIR_MESH_RT):
+				ma->ma_flags |= MIF_ATTR_FLAG_READOK;
+			break;
+			default:
+			break;
+		}
+	}
+	return EOK;
+}
+
+int
+mif_dslf_mesh_get_config(struct mif_request_s *req, int id)
+{
+	int sts = 1;
+	char buf[VENDOR_MESH_PROC_DEVICE_BUFFER];
+
+	switch (id) {
+		case DEVICE(AIR_MESH_RT):
+		{
+			sts = get_mesh_air_mesh_rt(VENDOR_MESH_PROC_FILENAME, buf, sizeof(buf));
+			if (sts != EOK) {
+				break;
+			}
+			return mif_request_set_value(req, id, buf, sizeof(buf));
+		}
+		default:
+		{
+			syslog(LOG_ERR, "Unsupported Get Request in %s\n", __FUNCTION__);
+			return EFAIL;
+		}
+	}
+	return EFAIL;
+}
+
+int
+mif_dslf_mesh_set_config(struct mif_request_s *req, int id)
+{
+	int sts = EOK;
+	cm_tran_id_t tid = mif_request_tid(req);
+	char buf[BUFFER_LENGTH];
+	int val;
+	int err;
+	switch (id) {
+		default:
+			sts = ENOENT;
+		break;
+	}
+	return sts;
+}
+
+int
+mif_dslf_mesh_notify(struct mif_request_s *req, int id,
+			int notification, mif_notify_t func,
+			mifd_conn_t *mconn)
+{
+	int sts = EOK;
+	int cms_modid;
+	cm_tran_id_t tid = mif_request_tid(req);
+	switch (id) {
+		default:
+		{
+			/* To support active notification, the corresponding cm notify
+			* callback has to be registered. On the other hand,
+			* nothing needs to be done at this layer for passive
+			* notification.
+			*/
+			if (notification == TW_MGMT_NOTIFY_ACTIVE) {
+				sts = ENOTSUP;
+			} else {
+				sts = EOK;
+			}
+			break;
+		}
+	}
+	return sts;
+}
+
diff -Naurr diagnostics-1.3_orig/apps/mifd/mgmtif/mif_defs.mk diagnostics-1.3_new/apps/mifd/mgmtif/mif_defs.mk
--- diagnostics-1.3_orig/apps/mifd/mgmtif/mif_defs.mk	2014-12-04 12:41:40.000000000 +0000
+++ diagnostics-1.3_new/apps/mifd/mgmtif/mif_defs.mk	2015-08-14 20:41:19.203283720 +0100
@@ -39,7 +39,8 @@
 	dslf_ip.xml	\
 	dslf_scanchannel.xml	\
 	dslf_lnb.xml \
-	dslf_supportmcu.xml
+	dslf_supportmcu.xml \
+	dslf_mesh.xml
 
 DSLF_BASIC_SPECS = \
 	dslf_tr181_220-partial.xml \
@@ -77,7 +78,8 @@
 	dslf_ip.xml	\
 	dslf_scanchannel.xml	\
 	dslf_lnb.xml \
-	dslf_supportmcu.xml
+	dslf_supportmcu.xml \
+	dslf_mesh.xml
 
 DSLF_ALL_SPECS = \
 	dslf_tr181_220-partial.xml \
@@ -115,7 +117,8 @@
 	dslf_ip.xml	\
 	dslf_scanchannel.xml	\
 	dslf_lnb.xml \
-	dslf_supportmcu.xml
+	dslf_supportmcu.xml \
+	dslf_mesh.xml
 
 DSLF_FILES = \
 	mgmtif.c \
@@ -250,6 +253,7 @@
 	mgmtif_dslf_deviceinfo_x_sky_com_supportmcu_status.c \
 	mgmtif_dslf_deviceinfo_x_sky_com_supportmcu_wakeup.c \
 	mgmtif_dslf_x_sky_com_supportmcu_wakeup_config.c \
+	mgmtif_dslf_mesh.c \
 	vendor_hooks.c
 
 DSLF_FILES_ALL = \
diff -Naurr diagnostics-1.3_orig/apps/mifd/mgmtif/vendor_hook_mesh.c diagnostics-1.3_new/apps/mifd/mgmtif/vendor_hook_mesh.c
--- diagnostics-1.3_orig/apps/mifd/mgmtif/vendor_hook_mesh.c	1970-01-01 01:00:00.000000000 +0100
+++ diagnostics-1.3_new/apps/mifd/mgmtif/vendor_hook_mesh.c	2015-08-14 21:09:11.397488110 +0100
@@ -0,0 +1,80 @@
+/*
+** @file             vendor_hook_mesh.c
+** @author        David Roberts
+** @date           14/8/2015
+** @addtogroup Diagnostics - TR-069
+**
+**
+** $Log$
+*/
+/**************************************************************************************************************
+*
+* Description:  Interface to implement Object
+*					Device.Services.STBService.Components.FrontEnd.X_SKY_COM_DVBS.Tuner.{i}
+* -------------------------------------------------------------------------------------------------------------
+* Copyright (C) 2015 British Sky Broadcasting Group Plc, All Rights Reserved
+* -------------------------------------------------------------------------------------------------------------
+* BSKYB PROPRIETARY/CONFIDENTIAL
+* Not for distribution outside of the BSKYB Group without approval
+**************************************************************************************************************/
+/*---------------------------------------------------------------------------
+** Includes
+*/
+#include <sys/types.h>
+#include <sys/ioctl.h>
+#include <sys/syslog.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <stdint.h>
+#include <string.h>
+#include <errno.h>
+#include <fcntl.h>
+#include <unistd.h>
+#include "mgmtif_dslf.h"
+#include "mgmtif_private.h"
+#include "mgmtns_dslf.h"
+
+#include "vendor_hooks.h"
+
+/*---------------------------------------------------------------------------
+** Defines and Macros
+*/
+#ifndef EOK
+#define EOK 0
+#endif
+
+/*---------------------------------------------------------------------------
+** Typedefs
+*/
+/* NONE */
+
+
+/*---------------------------------------------------------------------------
+** Local Function Prototypes
+*/
+/* NONE */
+
+/*---------------------------------------------------------------------------
+** Data
+*/
+/* NONE */
+
+/*---------------------------------------------------------------------------
+** Global Functions
+*/
+/* NONE */
+
+/*---------------------------------------------------------------------------
+** Local Functions
+*/
+
+int get_mesh_air_mesh_rt(char *deviceId, char *buf, size_t length)
+{
+
+	if (eVENDORHOOK_OK == vendor_hook_read_text_file(deviceId, buf, length) ) {
+	}else {
+		snprintf(buf, length, "Info not Available");
+	}
+	return EOK;
+}
+
diff -Naurr diagnostics-1.3_orig/apps/mifd/mgmtif/vendor_hook_mesh.h diagnostics-1.3_new/apps/mifd/mgmtif/vendor_hook_mesh.h
--- diagnostics-1.3_orig/apps/mifd/mgmtif/vendor_hook_mesh.h	1970-01-01 01:00:00.000000000 +0100
+++ diagnostics-1.3_new/apps/mifd/mgmtif/vendor_hook_mesh.h	2015-08-14 21:10:51.084031205 +0100
@@ -0,0 +1,48 @@
+
+/*
+** @file             vendor_hook_mesh.h
+** @author        David Roberts
+** @date           14/08/2015
+** @addtogroup Diagnostics - TR-069
+**
+**
+** $Log$
+*/
+/**************************************************************************************************************
+*
+* Description:  Interface to implement Object Device.Services.STBService.Components.FrontEnd.X_SKY_COM_DVBS.Tuner.{i}
+* -------------------------------------------------------------------------------------------------------------
+* Copyright (C) 2015 British Sky Broadcasting Group Plc, All Rights Reserved
+* -------------------------------------------------------------------------------------------------------------
+* BSKYB PROPRIETARY/CONFIDENTIAL
+* Not for distribution outside of the BSKYB Group without approval
+**************************************************************************************************************/
+#ifndef __VENDOR_HOOK_MESH_H__
+#define __VENDOR_HOOK_MESH_H__
+/*---------------------------------------------------------------------------
+** Includes
+*/
+/* NONE */
+
+/*---------------------------------------------------------------------------
+** Defines and Macros
+*/
+#define VENDOR_MESH_PROC_FILENAME "/dev/air_mesh_rt"
+#define VENDOR_MESH_PROC_DEVICE_BUFFER      ((8 * 1024) + 1)
+
+/*---------------------------------------------------------------------------
+** Typedefs
+*/
+/* NONE */
+
+/*---------------------------------------------------------------------------
+** Data
+*/
+/* NONE */
+
+/*---------------------------------------------------------------------------
+** Functions
+*/
+int get_mesh_air_mesh_rt(char *deviceId, char *, size_t);
+#endif
+
