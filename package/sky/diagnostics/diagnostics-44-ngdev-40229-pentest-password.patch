diff -Naurr diagnostics-1.3_orig/apps/mifd/mgmtif/vendor_hook_deviceinfo.c diagnostics-1.3_new/apps/mifd/mgmtif/vendor_hook_deviceinfo.c
--- diagnostics-1.3_orig/apps/mifd/mgmtif/vendor_hook_deviceinfo.c	2015-08-19 14:52:37.000000000 +0100
+++ diagnostics-1.3_new/apps/mifd/mgmtif/vendor_hook_deviceinfo.c	2015-08-20 22:10:43.249588116 +0100
@@ -57,6 +57,7 @@
 #define BSKYB_DEVICEINFO_HOSTNAME_SIZE	(20)
 #define BSKYB_DEVICEINFO_HOSTNAME_FILENAME				"/etc/hostname"
 #define BSKYB_DEVICEINFO_SOFTWARE_VERSION_FILENAME		"/tmp/VERSION.TXT"
+#define BSKYB_DEVICEINFO_SERIAL_NUMBER_FILENAME         "/opt/cm/serialnumber.txt"
 
 /* Macro for turning OFF unwanted device info parameters */
 #define SKY_TURN_OFF_DEVICEINFO_PARAMETERS
@@ -268,7 +269,7 @@
 int get_device_macaddress(char * pMacAdress, size_t length)
 {
 	int sts = 0;
-	sts = board_info_serialnumber(pMacAdress, length);
+	sts = board_info_macaddr(pMacAdress, length);
 	if (sts != EOK) {
 		pMacAdress[0] = '\0';
 	}
@@ -294,7 +295,8 @@
 	char *pInputStr = "Serial Number: ";
 	char serialNumber[VENDOR_HOOKS_MAX_RESPONSE_SIZE];
 	char hwVersion[BSKYB_DEVICEINFO_HW_VER_SIZE_MAX];
-
+	int foundSerialNumber = 0;
+	
 	result = get_deviceinfo_string_variable(pDeviceID, pInputStr, serialNumber, sizeof(serialNumber));
 	if (EOK == result) {
 		val = strtol(serialNumber, NULL, VENDOR_HOOKS_BASE_16_NUMBER);
@@ -305,6 +307,7 @@
 		/*When the box is serialized, we get serial number as a HEX number
 		which has to be converted to a string with decimal value*/
 		snprintf(serialNumber, sizeof(serialNumber), "%010ld", val);
+		foundSerialNumber = 1;
 	} else {
 		/* when the Box is not serialized , we get a value of all FF's .. For ex: FFFFFF*/
 		/* In this case, Obtain Serial Number as  MAC Address*/
@@ -314,6 +317,11 @@
 #if defined (SKY_TURN_OFF_DEVICEINFO_PARAMETERS)
 	if (EOK == getHWVersion(pDeviceID, hwVersion, sizeof(hwVersion))) {
 		snprintf(buf, length, "%s%s", hwVersion, serialNumber);
+		/* Only save real serial number and only save once. */
+		if (foundSerialNumber && (EOK != access(BSKYB_DEVICEINFO_SERIAL_NUMBER_FILENAME, F_OK))){
+			vendor_hook_write_proc_device(BSKYB_DEVICEINFO_SERIAL_NUMBER_FILENAME,
+										buf, strlen(buf));
+		}
 	} else {
 		strncpy(buf, serialNumber, length);
 	}
diff -Naurr diagnostics-1.3_orig/libs/libboard/info.c diagnostics-1.3_new/libs/libboard/info.c
--- diagnostics-1.3_orig/libs/libboard/info.c	2015-08-19 14:52:37.000000000 +0100
+++ diagnostics-1.3_new/libs/libboard/info.c	2015-08-21 12:06:18.797906986 +0100
@@ -59,13 +59,7 @@
 		return ENODATA;
 	}
 
-	/* just truncate the data and make sure it is null terminated */
-	--count;
-	if (!isspace(buf[count])) {
-		buf[count] = '\0';
-		syslog(LOG_INFO, "board_info_parameter: truncated '%s'", buf);
-		return 0;
-	}
+	buf[count] = '\0';
 
 	while ((count > 0) && isspace(buf[count])) {
 		buf[count] = '\0';
@@ -119,14 +113,10 @@
 board_info_serialnumber(char *buf, size_t bufsz)
 {
 	int err;
-        err = board_info_macaddr(buf, bufsz);
-	/*
-	int err;
 	int i;
 	int fd;
 	const char *path[] = {
-		"/etc/board/serialnumber",
-		"/sys/module/board/parameters/serialnumber",
+		"/opt/cm/serialnumber.txt",
 		NULL,
 	};
 
@@ -148,9 +138,9 @@
 
 	err = _board_read_parameter(fd, buf, bufsz);
 	close(fd);
-	*/
+	
 	if (err != 0) {
-		return err;
+		board_info_macaddr(buf, bufsz);
 	}
 
 	return EOK;
@@ -275,8 +265,7 @@
 	int i;
 	int fd;
 	const char *path[] = {
-		"/etc/board/authcode",
-		"/sys/module/board/parameters/authcode",
+		"/opt/cm/serialnumber.txt",
 		NULL,
 	};
 
