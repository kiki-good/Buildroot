diff -Naurr diagnostics-1.3_orig/apps/mifd/mifd.c diagnostics-1.3_new/apps/mifd/mifd.c
--- diagnostics-1.3_orig/apps/mifd/mifd.c	2015-11-11 10:06:13.000000000 +0000
+++ diagnostics-1.3_new/apps/mifd/mifd.c	2015-11-11 11:28:38.282106703 +0000
@@ -396,7 +396,6 @@
 #ifdef DETECT_DIRTY_TABLES
     if (ctx->table_states) {
         free(ctx->table_states);
-		ctx->table_states = NULL;
     }
 #endif
 
@@ -536,7 +535,6 @@
     }
 
     free (oidstr);
-	oidstr = NULL;
     return EOK;
 
 }
@@ -569,7 +567,7 @@
 
     int err = EOK;
     mifd_ctx_t *ctx = mconn->mifd_ctx;
-    char *oidstr;
+    char *oidstr = NULL;
     mifd_conn_path_notify_t *mcpn;
     mifd_conn_notify_t *mcn;
     bool found_oidstr = false;
@@ -602,8 +600,16 @@
             if(!found_mifpath) {
                 /* mif path not yet registered; add it */
                 mifd_conn_notify_t *new_mcn = malloc(sizeof(mifd_conn_notify_t));
+		if(! new_mcn){
+			syslog(LOG_ERR, "mif_register_notification: malloc() failed");
+			goto bail;
+		}
                 new_mcn->mif_path = malloc(strlen(mconn->path) +1);
                 strncpy(new_mcn->mif_path, mconn->path, strlen(mconn->path)+1);
+		if(! new_mcn->mif_path){
+			syslog(LOG_ERR, "mif_register_notification: malloc() failed");
+			goto bail;
+		}
                 new_mcn->mcn_flags = 0;
                 new_mcn->mcn_cco = NULL;
                 TAILQ_INSERT_TAIL(&mcpn->cco_list, new_mcn, mcn_ent);
@@ -614,21 +620,34 @@
     if(!found_oidstr) {
         /* oid is not yet registered; add it */
         mifd_conn_path_notify_t *new_mcpn = malloc(sizeof(mifd_conn_path_notify_t));
+	if(! new_mcpn){
+		syslog(LOG_ERR, "mif_register_notification: malloc() failed");
+                goto bail;
+	}
         new_mcpn->oidstr = malloc(strlen(oidstr) + 1);
         strncpy(new_mcpn->oidstr, oidstr, strlen(oidstr) + 1);
         TAILQ_INIT(&new_mcpn->cco_list);
         TAILQ_INSERT_TAIL(&mconn->paths, new_mcpn, mcpn_ent);
         mifd_conn_notify_t *new_mcn = malloc(sizeof(mifd_conn_notify_t));
+	if(! new_mcn){
+		syslog(LOG_ERR, "mif_register_notification: malloc() failed");
+		goto bail;
+	}
         new_mcn->mif_path = malloc(strlen(mconn->path) +1);
         strncpy(new_mcn->mif_path, mconn->path, strlen(mconn->path)+1);
+        if(! new_mcn->mif_path){
+		syslog(LOG_ERR, "mif_register_notification: malloc() failed");
+		goto bail;
+	}
         new_mcn->mcn_flags = 0;
         new_mcn->mcn_cco = NULL;
         TAILQ_INSERT_TAIL(&new_mcpn->cco_list, new_mcn, mcn_ent);
     }
 
 bail:
-    free(oidstr);
-	oidstr = NULL;
+    if (!oidstr){
+        free(oidstr);
+    }
     return err;
 }
 
@@ -671,18 +690,14 @@
             syslog(LOG_DEBUG, "mifd_unregister_notification: removing entry for path \"%s\"", mconn->path);
             TAILQ_REMOVE(&mcpn->cco_list, mcn, mcn_ent);
             free(mcn->mif_path);
-			mcn->mif_path = NULL;
             free(mcn);
-			mcn = NULL;
         }
 
         if (! mcpn->cco_list.tqh_first) {
             syslog(LOG_DEBUG, "mifd_unregister_notification: removing entry for OID \"%s\"", oidstr);
             TAILQ_REMOVE(&mconn->paths, mcpn, mcpn_ent);
             free(mcpn->oidstr);
-			mcpn->oidstr = NULL;
             free(mcpn);
-			mcpn = NULL;
 
             syslog(LOG_DEBUG, "mifd_unregister_notification: unregistering CM callback for OID \"%s\"", oidstr);
             err = cm_notify_unregister(ctx->cm_ctx, func, co);
@@ -694,7 +709,6 @@
 
 done:
         free(oidstr);
-		oidstr = NULL;
         return EOK;
 }
 
@@ -801,7 +815,6 @@
     s_snprintf(val, sz, "%s%s", prefix, value);
     map_insert(map, name, (const u_char *)val, sz);
     free(val);
-	val = NULL;
     return;
 }
 
@@ -3072,7 +3085,6 @@
         TAILQ_REMOVE(&nodes, mne, mne_ent);
         sts |= miflib_add_node(tid, nsname, mne->mne_name, NULL);
         free(mne);
-		mne = NULL;
     }
 
 #ifdef DETECT_DIRTY_TABLES
@@ -3229,7 +3241,6 @@
 
 #ifdef DETECT_DIRTY_TABLES
         free(states);
-		states = NULL;
 #endif
 
         ctx->frametype = frametype;
@@ -3302,9 +3313,7 @@
                 if(ctx->flags & MIFD_FLAG_STOP) {
                     /* We're stopping */
                     free(inbound_fd);
-					inbound_fd = NULL;
                     free(outbound_fd);
-					outbound_fd = NULL;
                     return 0;
                 }
                 else {
@@ -3349,9 +3358,7 @@
     }
 
     free(inbound_fd);
-	inbound_fd = NULL;
     free(outbound_fd);
-	outbound_fd = NULL;
 
     return 0;
 }
@@ -3509,7 +3516,6 @@
         mifd_dispatch_fds(ctx, pfd_count, pfd_list);
 
         free(pfd_list);
-		pfd_list = NULL;
 
         if(ctx->flags & MIFD_FLAG_STATS) {
 
@@ -3719,23 +3725,19 @@
     /* free up mconn structure */
     if(mconn->path != NULL) {
         free(mconn->path);
-		mconn->path = NULL;
     }
     TAILQ_FOREACH(mcpn, &mconn->paths, mcpn_ent) {
         TAILQ_FOREACH(mcn, &mcpn->cco_list, mcn_ent) {
-            if(mcn->mif_path){
+            if(mcn->mif_path)
                 free(mcn->mif_path);
-				mcn->mif_path = NULL;
-            }
             mcn->mcn_cco = NULL;
         }
-        if(mcpn->oidstr){
+        if(mcpn->oidstr)
             free(mcpn->oidstr);
-			mcpn->oidstr = NULL;
-        }
     }
-    free(mconn);
-	mconn = NULL;
+    if(mconn != NULL){
+        free(mconn);
+    }
     return;
 }
 
@@ -3801,7 +3803,6 @@
                ar_str != NULL ? ar_str : "unknown");
         if (ar_str != NULL) {
             free(ar_str);
-			ar_str = NULL;
         }
         return err;
     }
