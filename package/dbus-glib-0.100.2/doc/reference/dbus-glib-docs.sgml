<?xml version="1.0"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY dbus-binding-tool SYSTEM "dbus-binding-tool.xml">
<!ENTITY version SYSTEM "version.xml">
]>
<book id="index" xmlns:xi="http://www.w3.org/2003/XInclude">
  <bookinfo>
    <title>D-Bus GLib bindings - Reference Manual</title>
    <releaseinfo>for version &version;</releaseinfo>
  </bookinfo>

  <chapter>
    <title>Introduction</title> 

    <para>D-Bus is a message bus system, a simple way for applications
    to talk to one another.</para>

    <para>D-Bus supplies both a system daemon (for events such as "new
    hardware  device   added"  or  "printer  queue   changed")  and  a
    per-user-login-session  daemon (for general  IPC needs  among user
    applications). Also, the message bus  is built on top of a general
    one-to-one message passing framework, which can be used by any two
    apps to  communicate directly  (without going through  the message
    bus daemon).  Currently the communicating applications  are on one
    computer,  but  TCP/IP  option  is available  and  remote  support
    planned.</para>

    <para>The D-Bus  API isn't finished yet,  and the design  is by no
    means set in stone. One of  our main goals is for lots of projects
    to use it, so if you wouldn't use it, by all means mail us and say
    why -  design, licensing, indentation style, we  would rather know
    than not know.</para>

    <para>D-Bus' only <emphasis>required</emphasis> dependency is an
    XML parser (either
    libxml  or expat). D-Bus  includes many  language bindings  to the
    D-Bus system,  if you  want to build  those. The list  of projects
    using D-Bus  is growing and they  provide a wealth  of examples of
    using the various APIs to learn from.</para>

    <para>Trying out  D-Bus in sample applications is  encouraged - we
      want to  get it  widely used and  tested.  It should  be working
      pretty well these  days, and when it isn't  bug reports are very
      welcome.</para>

    <para>For more information on D-Bus, see
      <ulink url="http://www.freedesktop.org/wiki/Software/dbus">
       http://www.freedesktop.org/wiki/Software/dbus</ulink>.
    </para>

  </chapter>

  <chapter>
    <title>API Reference</title>
    <sect1 id="api-overview">
    <title>API for using D-BUS with GLib</title>

    <para>libdbus proper is a  low-level API, these GLib bindings wrap
    libdbus  with  a much  higher-level  approach.   The higher  level
    approach  is  possible  because  GLib  defines  a  main  loop,  an
    object/type system, and an out-of-memory handling policy (it exits
    the program).  See <ulink
    url="http://www.gtk.org">http://www.gtk.org</ulink> for GLib
    information.</para>
    <para>To manipulate remote objects, use DBusGProxy. </para>
    </sect1>

    <xi:include href="xml/dbus-gconnection.xml"/>
    <xi:include href="xml/dbus-gobject.xml"/>
    <xi:include href="xml/dbus-gmessage.xml"/>
    <xi:include href="xml/dbus-gmethod.xml"/>
    <xi:include href="xml/dbus-gerror.xml"/>
    <xi:include href="xml/dbus-gproxy.xml"/>
    <xi:include href="xml/dbus-gtype-specialized.xml"/>
    <xi:include href="xml/dbus-glib-lowlevel.xml"/>
  </chapter>

  <chapter>
    <title>Tools Reference</title>

    &dbus-binding-tool;

  </chapter>

</book>
