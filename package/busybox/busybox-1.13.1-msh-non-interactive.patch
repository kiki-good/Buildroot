Index: busybox-1.13.1/shell/Config.in
===================================================================
--- busybox-1.13.1.orig/shell/Config.in
+++ busybox-1.13.1/shell/Config.in
@@ -261,6 +261,14 @@ config MSH
 	  on it and compare vs bash) but for most things it works quite well.
 	  It uses only vfork, so it can be used on uClinux systems.
 
+config MSH_NON_INTERACTIVE
+        bool "Build msh without interactive support (production)"
+	default n
+	depends on MSH
+	help
+	  For security, it can be useful to disable interactive features of
+	  the shell, which prevents user login etc. Say Y here to do so.
+
 comment "Bourne Shell Options"
 	depends on MSH || LASH || HUSH || ASH
 
Index: busybox-1.13.1/shell/Kbuild
===================================================================
--- busybox-1.13.1.orig/shell/Kbuild
+++ busybox-1.13.1/shell/Kbuild
@@ -9,3 +9,7 @@ lib-$(CONFIG_ASH)      += ash.o ash_ptr_
 lib-$(CONFIG_HUSH)     += hush.o
 lib-$(CONFIG_MSH)      += msh.o
 lib-$(CONFIG_CTTYHACK) += cttyhack.o
+
+ifeq ($(CONFIG_MSH_NON_INTERACTIVE),y)
+CFLAGS_msh.o	       += -DMSH_NON_INTERACTIVE
+endif
Index: busybox-1.13.1/shell/msh.c
===================================================================
--- busybox-1.13.1.orig/shell/msh.c
+++ busybox-1.13.1/shell/msh.c
@@ -493,8 +494,10 @@ static int dolabel(struct op *t, char **
 static int dohelp(struct op *t, char **args);
 static int dochdir(struct op *t, char **args);
 static int doshift(struct op *t, char **args);
+#ifndef	MSH_NON_INTERACTIVE
 static int dologin(struct op *t, char **args);
 static int doumask(struct op *t, char **args);
+#endif
 static int doexec(struct op *t, char **args);
 static int dodot(struct op *t, char **args);
 static int dowait(struct op *t, char **args);
@@ -575,15 +578,19 @@ static const struct builtincmd builtincm
 	{ "exit"    , doexit     },
 	{ "export"  , doexport   },
 	{ "help"    , dohelp     },
+#ifndef	MSH_NON_INTERACTIVE
 	{ "login"   , dologin    },
 	{ "newgrp"  , dologin    },
+#endif
 	{ "read"    , doread     },
 	{ "readonly", doreadonly },
 	{ "set"     , doset      },
 	{ "shift"   , doshift    },
 	{ "times"   , dotimes    },
 	{ "trap"    , dotrap     },
+#ifndef	MSH_NON_INTERACTIVE
 	{ "umask"   , doumask    },
+#endif
 	{ "wait"    , dowait     },
 	{ NULL      , NULL       },
 };
@@ -3252,6 +3259,7 @@ static int doshift(struct op *t UNUSED_P
 /*
  * execute login and newgrp directly
  */
+#ifndef	MSH_NON_INTERACTIVE
 static int dologin(struct op *t UNUSED_PARAM, char **args)
 {
 	const char *cp;
@@ -3287,6 +3295,7 @@ static int doumask(struct op *t UNUSED_P
 	}
 	return 0;
 }
+#endif
 
 static int doexec(struct op *t, char **args)
 {
@@ -5109,6 +5118,16 @@ int msh_main(int argc, char **argv)
 
 	DBGPRINTF(("MSH_MAIN: argc %d, environ %p\n", argc, environ));
 
+#ifdef	MSH_NON_INTERACTIVE
+	/*
+	 * To avoid scripts containing :
+	 * while true; do read i; $i; done
+	 */
+	if (isatty(0)) {
+		close(0);
+	}
+#endif
+
 	initarea();
 	ap = environ;
 	if (ap != NULL) {
@@ -5170,6 +5189,7 @@ int msh_main(int argc, char **argv)
 	iof = filechar;
 	cflag = 0;
 	name = *argv++;
+
 	if (--argc >= 1) {
 		if (argv[0][0] == '-' && argv[0][1] != '\0') {
 			for (s = argv[0] + 1; *s; s++)
@@ -5199,7 +5219,12 @@ int msh_main(int argc, char **argv)
 					break;
 
 				case 'i':
+#ifdef	MSH_NON_INTERACTIVE
+					printf("msh : invalid -i option (msh [non interactive])\n");
+					exit(1);
+#else
 					interactive = 1;
+#endif
 				default:
 					if (*s >= 'a' && *s <= 'z')
 						FLAG[(int) *s]++;
@@ -5235,6 +5260,10 @@ int msh_main(int argc, char **argv)
 	if (global_env.iop < iostack) {
 		PUSHIO(afile, 0, iof);
 		if (isatty(0) && isatty(1) && !cflag) {
+#ifdef	MSH_NON_INTERACTIVE
+			printf("\n\n%s Built-in shell (msh) [non interactive]. Exiting\n", bb_banner);
+			exit(1);
+#endif
 			interactive = 1;
 #if !ENABLE_FEATURE_SH_EXTRA_QUIET
 #ifdef MSHDEBUG
@@ -5249,6 +5278,11 @@ int msh_main(int argc, char **argv)
 
 	signal(SIGQUIT, qflag);
 	if (name && name[0] == '-') {
+#ifdef	MSH_NON_INTERACTIVE
+		printf("\n\n%s Built-in shell (msh) [non interactive].\n", bb_banner);
+		printf("Login shell disabled\n");
+		exit(1);
+#endif
 		interactive = 1;
 		f = open(".profile", O_RDONLY);
 		if (f >= 0)
